@inproceedings{10.1145/3551357.3551372,
author = {Desmartin, Remi and Passmore, Grant and Komendantskaya, Ekaterina and Daggit, Matthew},
title = {CheckINN: Wide Range Neural Network Verification in Imandra},
year = {2022},
isbn = {9781450397032},
publisher = {Association for Computing Machinery},
abstract = {Neural networks are increasingly relied upon as components of complex safety-critical systems such as autonomous vehicles. There is high demand for tools and methods that embed neural network verification in a larger verification cycle. However, neural network verification is difficult due to a wide range of verification properties of interest, each typically only amenable to verification in specialised solvers. In this paper, we show how Imandra, a functional programming language and a theorem prover originally designed for verification, validation and simulation of financial infrastructure can offer a holistic infrastructure for neural network verification. We develop a novel library CheckINN that formalises neural networks in Imandra, and covers different important facets of neural network verification.},
booktitle = {Proceedings of the 24th International Symposium on Principles and Practice of Declarative Programming},
articleno = {3},
numpages = {14},
keywords = {Boyer-Moore Provers, Verification, Robustness, Neural Networks},
location = {Tbilisi, Georgia},
series = {PPDP '22}
}

 @inproceedings{10.1007/978-3-031-21222-2_6,
  title = {Neural Networks in Imandra: {{Matrix}} Representation as a Verification Choice},
  booktitle = {Software Verification and Formal Methods for {{ML-Enabled}} Autonomous Systems},
  author = {Desmartin, Remi and Passmore, Grant and Kommendentskaya, Ekaterina},
  year = {2022},
  pages = {78--95},
  publisher = {{Springer International Publishing}},
  abstract = {The demand for formal verification tools for neural networks has increased as neural networks have been deployed in a growing number of safety-critical applications. Matrices are a data structure essential to formalising neural networks. Functional programming languages encourage diverse approaches to matrix definitions. This feature has already been successfully exploited in different applications. The question we ask is whether, and how, these ideas can be applied in neural network verification. A functional programming language Imandra combines the syntax of a functional programming language and the power of an automated theorem prover. Using these two key features of Imandra, we explore how different implementations of matrices can influence automation of neural network verification.},
  isbn = {978-3-031-21222-2}
}
 